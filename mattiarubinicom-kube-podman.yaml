# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-3.4.0
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2021-10-25T20:09:43Z"
  labels:
    app: rocket-mattiarubinicom
  name: rocket-mattiarubinicom
spec:
  ports:
  - name: "80"
    nodePort: 31809
    port: 80
    protocol: TCP
    targetPort: 0
  selector:
    app: rocket-mattiarubinicom
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2021-10-25T20:09:43Z"
  labels:
    app: rocket-mattiarubinicom
  name: rocket-mattiarubinicom
spec:
  containers:
  - args:
    - nginx
    - -g
    - daemon off;
    command:
    - /docker-entrypoint.sh
    env:
    - name: NGINX_VERSION
      value: 1.21.3
    - name: NJS_VERSION
      value: 0.6.2
    - name: PKG_RELEASE
      value: "1"
    image: localhost/rocket-mattiarubinicom_proxy:latest
    name: rproxy
    ports:
    - containerPort: 80
      hostPort: 8080
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    workingDir: /
  - image: localhost/rocket-mattiarubinicom_mattiarubinicom:latest
    name: homepage
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        drop:
        - CAP_MKNOD
        - CAP_NET_RAW
        - CAP_AUDIT_WRITE
      privileged: false
      readOnlyRootFilesystem: false
      seLinuxOptions: {}
    workingDir: /usr/src/myapp
  dnsConfig: {}
  restartPolicy: Never
status: {}

