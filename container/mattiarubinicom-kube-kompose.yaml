apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -o mattiarubinicom-kube-kompose.yaml
        kompose.version: 1.24.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: proxy
      name: proxy
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 80
      selector:
        io.kompose.service: proxy
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o mattiarubinicom-kube-kompose.yaml
        kompose.version: 1.24.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: mattiarubinicom
      name: mattiarubinicom
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: mattiarubinicom
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o mattiarubinicom-kube-kompose.yaml
            kompose.version: 1.24.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: mattiarubinicom
        spec:
          containers:
            - image: mattiarubinicom
              name: homepage
              resources: {}
          restartPolicy: Always
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -o mattiarubinicom-kube-kompose.yaml
        kompose.version: 1.24.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: proxy
      name: proxy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: proxy
      strategy: {}
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -o mattiarubinicom-kube-kompose.yaml
            kompose.version: 1.24.0 (HEAD)
          creationTimestamp: null
          labels:
            io.kompose.service: proxy
        spec:
          containers:
            - image: proxy
              name: rproxy
              ports:
                - containerPort: 80
              resources: {}
          restartPolicy: Always
    status: {}
kind: List
metadata: {}

